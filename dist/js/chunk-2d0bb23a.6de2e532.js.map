{"version":3,"sources":["webpack:///./src/components/uploadFilePdf/index.vue?384d","webpack:///src/components/uploadFilePdf/index.vue","webpack:///./src/components/uploadFilePdf/index.vue?afc0","webpack:///./src/components/uploadFilePdf/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticStyle","attrs","on","onFileChange","staticClass","class","pdfFile","fileUrl","_v","_s","imageName","$t","_g","$event","$refs","file","click","$attrs","model","value","callback","$$v","errorDialog","expression","FileErrorMessage","resetData","staticRenderFns","props","maxSize","type","Number","default","String","fileId","reset","Boolean","fieldName","resetToggle","watch","resetFile","immediate","newValue","computed","errorType","count","errorText","absolute","overlay","zIndex","methods","e","target","files","length","File","isValidPdfFileType","readImage","validateSize","name","URL","createObjectURL","dataObj","$emit","autoUpdate","image","formData","FormData","append","id","data","then","res","media","catch","err","console","log","size","setTimeout","component","VBtn","VCard","VCardActions","VCardText","VDialog","VIcon","VSpacer"],"mappings":"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","file":"js/chunk-2d0bb23a.6de2e532.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('input',{ref:\"file\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\"},on:{\"change\":_vm.onFileChange}}),_c('a',{staticClass:\"file-upload__image__placeholder hover-pointer\",class:{ 'file-upload__image__placeholder--active': _vm.pdfFile },attrs:{\"href\":_vm.fileUrl,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.imageName ? _vm.imageName : _vm.$t(\"label.upload_book\")))]),_c('v-btn',_vm._g({staticClass:\"button button--upload\",attrs:{\"small\":\"\",\"text\":\"\",\"title\":_vm.$t('label.upload_book')},on:{\"click\":function($event){return _vm.$refs.file.click()}}},_vm.$attrs),[_c('v-icon',{attrs:{\"dark\":\"\"}},[_vm._v(\" mdi-cloud-upload\")])],1),_c('v-dialog',{attrs:{\"max-width\":\"300\",\"persistent\":\"\"},model:{value:(_vm.errorDialog),callback:function ($$v) {_vm.errorDialog=$$v},expression:\"errorDialog\"}},[_c('v-card',[_c('v-card-text',{staticClass:\"subheading\"},[_vm._v(_vm._s(_vm.FileErrorMessage))]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{on:{\"click\":_vm.resetData}},[_vm._v(_vm._s(_vm.$t(\"button.got_it\")))])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <!-- <v-img :src=\"pdfFile || ''\" max-height=\"300\" /> -->\n    <input type=\"file\" ref=\"file\" @change=\"onFileChange\" style=\"display:none\" />\n\n    <a\n      class=\"file-upload__image__placeholder hover-pointer\"\n      :class=\"{ 'file-upload__image__placeholder--active': pdfFile }\"\n      :href=\"fileUrl\"\n      target=\"_blank\"\n      >{{ imageName ? imageName : $t(\"label.upload_book\") }}</a\n    >\n    <v-btn\n      class=\"button button--upload\"\n      small\n      text\n      @click=\"$refs.file.click()\"\n      v-on=\"$attrs\"\n      :title=\"$t('label.upload_book')\"\n    >\n      <v-icon dark> mdi-cloud-upload</v-icon>\n    </v-btn>\n\n    <v-dialog v-model=\"errorDialog\" max-width=\"300\" persistent>\n      <v-card>\n        <v-card-text class=\"subheading\">{{ FileErrorMessage }}</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn @click=\"resetData\">{{ $t(\"button.got_it\") }}</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport { isValidPdfFile, isValidImgSize } from \"@/utils/validate\";\nimport { UpdateMedia } from \"@/helpers/apiMethods\";\n\nexport default {\n  props: {\n    maxSize: {\n      type: Number,\n      default: 1\n    },\n    fileUrl: {\n      type: String,\n      default: null\n    },\n    fileId: {\n      type: Number,\n      default: null\n    },\n    reset: {\n      type: Boolean,\n      default: false\n    },\n\n    fieldName: {\n      type: String,\n      default: \"\"\n    },\n    value: {\n      type: String\n    },\n    resetToggle: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    reset: {\n      handler(value) {\n        if (value) {\n          this.resetFile();\n        }\n      },\n      immediate: false\n    },\n    resetToggle: {\n      handler(value) {\n        if (value) {\n          this.resetFile();\n        }\n      },\n      immediate: true\n    },\n    fileUrl: {\n      handler(newValue) {\n        if (newValue) {\n          this.imageName = this.$t(\"label.show_image\");\n          this.pdfFile = newValue;\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    FileErrorMessage() {\n      if (this.errorType === \"MIME\") {\n        return this.$t(\"validation.file_type\");\n      } else if (this.errorType === \"SIZE\") {\n        return this.$t(\"validation.file_size\", { count: this.maxSize });\n      } else {\n        return \"\";\n      }\n    }\n  },\n  data() {\n    return {\n      imageName: null,\n      pdfFile: null,\n      errorDialog: null,\n      errorText: \"\",\n      errorType: \"\",\n      //   imagePreview: \"\",\n      absolute: false,\n      overlay: false,\n      zIndex: 990\n    };\n  },\n  methods: {\n    onFileChange(e) {\n      if (e.target.files.length > 0) {\n        let File = e.target.files[0];\n        if (this.isValidPdfFileType(File)) {\n          this.readImage(File);\n        }\n      }\n    },\n    readImage(File) {\n      if (this.validateSize(File)) {\n        // console.log(\"image file\", File);\n        this.imageName = File.name;\n        this.pdfFile = URL.createObjectURL(File);\n        if (File) {\n          let dataObj = {\n            file: File\n          };\n          if (this.fieldName) {\n            dataObj.name = this.fieldName;\n            this.$emit(\"file_selected\", dataObj);\n          } else {\n            this.$emit(\"file_selected\", dataObj);\n          }\n\n          if (this.fileId) {\n            this.autoUpdate(dataObj.file);\n          }\n        }\n      }\n    },\n    autoUpdate(image) {\n      let formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"_method\", \"PUT\");\n      formData.append(\"locale\", \"en\");\n\n      UpdateMedia({ id: this.fileId, data: formData })\n        .then(res => {\n          const { media } = res.data;\n          this.$emit(\"FileUpdated\", media);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n\n    // },\n    validateSize(file) {\n      if (isValidImgSize(file.size, this.maxSize)) {\n        return true;\n      } else {\n        this.errorType = \"SIZE\";\n        this.errorDialog = true;\n        return false;\n      }\n    },\n    isValidPdfFileType(file) {\n      if (isValidPdfFile(file)) {\n        return true;\n      } else {\n        this.errorType = \"MIME\";\n        this.errorDialog = true;\n        return false;\n      }\n    },\n    resetFile() {\n      this.imageName = this.$t(\"label.upload_book\");\n      this.pdfFile = null;\n      this.$refs.file.value = \"\";\n    },\n    resetData() {\n      this.$refs.file.value = \"\";\n      this.errorDialog = false;\n      setTimeout(() => {\n        this.errorType = \"\";\n      }, 300);\n    },\n    showImagePreview() {\n      if (this.pdfFile) {\n        this.overlay = true;\n      }\n    }\n  }\n};\n</script>\n\n<style></style>\n","import mod from \"-!../../../node_modules/vuetify-loader/lib/loader.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/vuetify-loader/lib/loader.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=5eeca2f3&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VDialog,VIcon,VSpacer})\n"],"sourceRoot":""}